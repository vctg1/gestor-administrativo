{"ast":null,"code":"var _jsxFileName = \"/home/victorgm1/Documents/cened/gestor-administrativo/src/contexts/settingsContext.jsx\",\n    _s = $RefreshSig$();\n\nimport useLocalStorage from \"hooks/useLocalStorage\";\nimport { createContext } from \"react\";\nimport { THEMES } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialSettings = {\n  activeLayout: \"layout3\",\n  direction: \"ltr\",\n  theme: THEMES.LIGHT,\n  responsiveFontSizes: true\n};\nexport const SettingsContext = /*#__PURE__*/createContext({\n  settings: initialSettings,\n  saveSettings: arg => {}\n}); // component props type\n\nconst SettingsProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    data: settings,\n    storeData: setStoreSettings\n  } = useLocalStorage(\"settings\", initialSettings);\n\n  const saveSettings = updateSettings => {\n    setStoreSettings(updateSettings);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SettingsContext.Provider, {\n    value: {\n      settings,\n      saveSettings\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SettingsProvider, \"TwlNMy+22rYZVeKTNsh0gkOMLyM=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = SettingsProvider;\nexport default SettingsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsProvider\");","map":{"version":3,"names":["useLocalStorage","createContext","THEMES","initialSettings","activeLayout","direction","theme","LIGHT","responsiveFontSizes","SettingsContext","settings","saveSettings","arg","SettingsProvider","children","data","storeData","setStoreSettings","updateSettings"],"sources":["/home/victorgm1/Documents/cened/gestor-administrativo/src/contexts/settingsContext.jsx"],"sourcesContent":["import useLocalStorage from \"hooks/useLocalStorage\";\nimport { createContext } from \"react\";\nimport { THEMES } from \"../constants\";\nconst initialSettings = {\n  activeLayout: \"layout3\",\n  direction: \"ltr\",\n  theme: THEMES.LIGHT,\n  responsiveFontSizes: true,\n};\nexport const SettingsContext = createContext({\n  settings: initialSettings,\n  saveSettings: (arg) => {},\n}); // component props type\n\nconst SettingsProvider = ({ children }) => {\n  const { data: settings, storeData: setStoreSettings } = useLocalStorage(\n    \"settings\",\n    initialSettings\n  );\n\n  const saveSettings = (updateSettings) => {\n    setStoreSettings(updateSettings);\n  };\n\n  return (\n    <SettingsContext.Provider\n      value={{\n        settings,\n        saveSettings,\n      }}\n    >\n      {children}\n    </SettingsContext.Provider>\n  );\n};\n\nexport default SettingsProvider;\n"],"mappings":";;;AAAA,OAAOA,eAAP,MAA4B,uBAA5B;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,SAASC,MAAT,QAAuB,cAAvB;;AACA,MAAMC,eAAe,GAAG;EACtBC,YAAY,EAAE,SADQ;EAEtBC,SAAS,EAAE,KAFW;EAGtBC,KAAK,EAAEJ,MAAM,CAACK,KAHQ;EAItBC,mBAAmB,EAAE;AAJC,CAAxB;AAMA,OAAO,MAAMC,eAAe,gBAAGR,aAAa,CAAC;EAC3CS,QAAQ,EAAEP,eADiC;EAE3CQ,YAAY,EAAGC,GAAD,IAAS,CAAE;AAFkB,CAAD,CAArC,C,CAGH;;AAEJ,MAAMC,gBAAgB,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACzC,MAAM;IAAEC,IAAI,EAAEL,QAAR;IAAkBM,SAAS,EAAEC;EAA7B,IAAkDjB,eAAe,CACrE,UADqE,EAErEG,eAFqE,CAAvE;;EAKA,MAAMQ,YAAY,GAAIO,cAAD,IAAoB;IACvCD,gBAAgB,CAACC,cAAD,CAAhB;EACD,CAFD;;EAIA,oBACE,QAAC,eAAD,CAAiB,QAAjB;IACE,KAAK,EAAE;MACLR,QADK;MAELC;IAFK,CADT;IAAA,UAMGG;EANH;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CApBD;;GAAMD,gB;UACoDb,e;;;KADpDa,gB;AAsBN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}