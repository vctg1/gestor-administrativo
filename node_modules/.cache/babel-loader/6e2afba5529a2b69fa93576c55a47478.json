{"ast":null,"code":"import { createTheme, responsiveFontSizes } from \"@mui/material\";\nimport merge from \"lodash/merge\";\nimport { THEMES } from \"../constants\";\nimport components from \"./components\";\nimport { shadows } from \"./shadows\";\nimport themesOptions from \"./themeOptions\";\nconst baseOptions = {\n  direction: \"ltr\",\n  typography: {\n    fontFamily: \"'Montserrat', sans-serif\"\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 900,\n      lg: 1200,\n      xl: 1536\n    }\n  }\n};\nexport const createCustomTheme = settings => {\n  /**\n   * settings.theme value is 'light' or 'dark'\n   * update settings in contexts/settingsContext.tsx\n   */\n  let themeOptions = themesOptions[settings.theme];\n\n  if (!themeOptions) {\n    themeOptions = themesOptions[THEMES.LIGHT];\n  }\n\n  const mergedThemeOptions = merge({}, baseOptions, themeOptions, {\n    direction: settings.direction\n  });\n  let theme = createTheme(mergedThemeOptions); // set shadows\n\n  theme.shadows = shadows(theme); // set components\n\n  theme.components = components(theme);\n\n  if (settings.responsiveFontSizes) {\n    theme = responsiveFontSizes(theme);\n  }\n\n  return theme;\n};","map":{"version":3,"names":["createTheme","responsiveFontSizes","merge","THEMES","components","shadows","themesOptions","baseOptions","direction","typography","fontFamily","breakpoints","values","xs","sm","md","lg","xl","createCustomTheme","settings","themeOptions","theme","LIGHT","mergedThemeOptions"],"sources":["/home/victorgm1/Downloads/uko-js-2.0.0-ik4jj9/uko-js-2.0.0/src/theme/index.js"],"sourcesContent":["import { createTheme, responsiveFontSizes } from \"@mui/material\";\nimport merge from \"lodash/merge\";\nimport { THEMES } from \"../constants\";\nimport components from \"./components\";\nimport { shadows } from \"./shadows\";\nimport themesOptions from \"./themeOptions\";\nconst baseOptions = {\n  direction: \"ltr\",\n  typography: {\n    fontFamily: \"'Montserrat', sans-serif\",\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 900,\n      lg: 1200,\n      xl: 1536,\n    },\n  },\n};\nexport const createCustomTheme = (settings) => {\n  /**\n   * settings.theme value is 'light' or 'dark'\n   * update settings in contexts/settingsContext.tsx\n   */\n  let themeOptions = themesOptions[settings.theme];\n\n  if (!themeOptions) {\n    themeOptions = themesOptions[THEMES.LIGHT];\n  }\n\n  const mergedThemeOptions = merge({}, baseOptions, themeOptions, {\n    direction: settings.direction,\n  });\n  let theme = createTheme(mergedThemeOptions); // set shadows\n\n  theme.shadows = shadows(theme); // set components\n\n  theme.components = components(theme);\n\n  if (settings.responsiveFontSizes) {\n    theme = responsiveFontSizes(theme);\n  }\n\n  return theme;\n};\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,mBAAtB,QAAiD,eAAjD;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,MAAMC,WAAW,GAAG;EAClBC,SAAS,EAAE,KADO;EAElBC,UAAU,EAAE;IACVC,UAAU,EAAE;EADF,CAFM;EAKlBC,WAAW,EAAE;IACXC,MAAM,EAAE;MACNC,EAAE,EAAE,CADE;MAENC,EAAE,EAAE,GAFE;MAGNC,EAAE,EAAE,GAHE;MAINC,EAAE,EAAE,IAJE;MAKNC,EAAE,EAAE;IALE;EADG;AALK,CAApB;AAeA,OAAO,MAAMC,iBAAiB,GAAIC,QAAD,IAAc;EAC7C;AACF;AACA;AACA;EACE,IAAIC,YAAY,GAAGd,aAAa,CAACa,QAAQ,CAACE,KAAV,CAAhC;;EAEA,IAAI,CAACD,YAAL,EAAmB;IACjBA,YAAY,GAAGd,aAAa,CAACH,MAAM,CAACmB,KAAR,CAA5B;EACD;;EAED,MAAMC,kBAAkB,GAAGrB,KAAK,CAAC,EAAD,EAAKK,WAAL,EAAkBa,YAAlB,EAAgC;IAC9DZ,SAAS,EAAEW,QAAQ,CAACX;EAD0C,CAAhC,CAAhC;EAGA,IAAIa,KAAK,GAAGrB,WAAW,CAACuB,kBAAD,CAAvB,CAd6C,CAcA;;EAE7CF,KAAK,CAAChB,OAAN,GAAgBA,OAAO,CAACgB,KAAD,CAAvB,CAhB6C,CAgBb;;EAEhCA,KAAK,CAACjB,UAAN,GAAmBA,UAAU,CAACiB,KAAD,CAA7B;;EAEA,IAAIF,QAAQ,CAAClB,mBAAb,EAAkC;IAChCoB,KAAK,GAAGpB,mBAAmB,CAACoB,KAAD,CAA3B;EACD;;EAED,OAAOA,KAAP;AACD,CAzBM"},"metadata":{},"sourceType":"module"}